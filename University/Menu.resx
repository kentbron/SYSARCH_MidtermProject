<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pCiJAgdUg3HgbJ0khTktosgWH77kgxJJZk3B/9k=
</value>
  </data>
</root>